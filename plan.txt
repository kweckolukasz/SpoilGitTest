Rozwiązania dla przyszłych potrzeb oczywiście po wykonaniu zadania

1. Praca na lokalnym Repo - wprowadzanie i cofanie zmian


1.1 wprowadź plik plan.txt, edytuj, stage, commit
1.2 edytuj plan.txt i spraw aby ta wersja była w poprzednim commit
// rozwiązanie: add, commit --amend i tyle :)

1.3 stage - unstage - edytuj, stage, edytuj stage najnowszego, unstage, znowu stage i cofnięcie do bazowej wersji pliku (ta zaraz po commit)
git reset HEAD, reset --hard

1.4 wprowadź kilka commitów z bzdurnymi plikami
	a) zmień nazwę brancha z createGitStory na createPlan
	git branch (-m | -M) [<oldbranch>] <newbranch>
	a i pół) wszystkie zmiany dokonane w ramach 1.4 wprowadź w branch 1.4
	b) uaktualnij main zachowując najnowszą werję i pozostałe branche
	c) cofnij te kilka bzdurnych commitów tak żeby ich nie było ale pliki pozostały
		nie udało się, wrócę do tego jak dojde do rebase
	
1.5 Reset/Revert
	
	a) pobaw się z resetem --soft poobserwój co się zmienia
	Recap
	The reset command overwrites these three trees in a specific order, stopping when you tell it to:
	1. Move the branch HEAD points to (stop here if --soft).
	2. Make the index look like HEAD (stop here unless --hard).
	3. Make the working directory look like the index.
	git reset file to dokładna odwrotność git add file
	a.1) stwórz dwa pliki reset1 i reset2 stwórz text commit1 w obu, udaj się na oddzielny branch i commit, powtórz 3 razy
	potem przywracaj kolejno pliki do coraz uboższej wersji
	Nie Działa! poza hard który jest niebezpieczny, mixed nie uaktualnia stage, nie wiem dla czego, zostawię reset na chwilę :)

	b) revert i checkout
	j.w.
	